services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: ${USERNAME}
      POSTGRES_PASSWORD: ${PASSWORD}
      PGDATA: /var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
#      interval: 7s
#      timeout: 5s
#      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongo_db
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${PASSWORD}
    volumes:
      - mongo:/data
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    container_name: ms_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: